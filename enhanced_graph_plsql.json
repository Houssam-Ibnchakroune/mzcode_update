{
  "directed": true,
  "multigraph": false,
  "graph": {},
  "nodes": [
    {
      "node_type": "operation",
      "name": "table_creation_task",
      "properties": {
        "file": "C:\\Users\\hibnc\\Documents\\stage3\\MZCODE\\temp\\Water-Quality-DW-on-Oracle-Database-main\\Setup. PLSQL code to create the staging table.sql",
        "operation_subtype": "DATA_FLOW",
        "sql_statements_count": 1,
        "block_size": 912,
        "task_name": "table_creation_task",
        "has_explicit_task_name": true,
        "source_file_path": "C:\\Users\\hibnc\\Documents\\stage3\\MZCODE\\temp\\Water-Quality-DW-on-Oracle-Database-main\\Setup. PLSQL code to create the staging table.sql",
        "source_file_type": "sql",
        "technology": "ORACLE",
        "xml_path": "//plsql_operation[@name='table_creation_task']",
        "sql_semantics": [
          {
            "original_query": "SELECT * FROM dw_water_quality",
            "tables": [
              {
                "name": "dw_water_quality",
                "alias": null,
                "schema": null,
                "full_name": "dw_water_quality"
              }
            ],
            "joins": [],
            "columns": [],
            "inline_views": [],
            "where_clause": null,
            "migration_metadata": {
              "table_count": 1,
              "join_count": 0,
              "column_count": 0,
              "inline_view_count": 0,
              "has_aliases": false,
              "has_joins": false,
              "has_inline_views": false,
              "join_types": []
            }
          }
        ]
      },
      "context": {},
      "id": "plsql::Setup. PLSQL code to create the staging table.sql::table_creation_task"
    },
    {
      "node_type": "pipeline",
      "name": "Setup. PLSQL code to create the staging table",
      "properties": {
        "file": "C:\\Users\\hibnc\\Documents\\stage3\\MZCODE\\temp\\Water-Quality-DW-on-Oracle-Database-main\\Setup. PLSQL code to create the staging table.sql",
        "technology": "ORACLE",
        "fqn": "oracle/Setup. PLSQL code to create the staging table",
        "qualified_name": "oracle/Setup. PLSQL code to create the staging table",
        "source_file_path": "C:\\Users\\hibnc\\Documents\\stage3\\MZCODE\\temp\\Water-Quality-DW-on-Oracle-Database-main\\Setup. PLSQL code to create the staging table.sql",
        "source_file_type": "sql",
        "xml_path": "//plsql_operation[@name='Setup. PLSQL code to create the staging table']",
        "execution_priority": 1,
        "upstream_dependencies": [],
        "downstream_dependencies": [],
        "shared_tables_used": [
          "table::dw_water_quality"
        ],
        "shared_connections_used": [],
        "cross_package_analysis_complete": true
      },
      "context": {},
      "id": "plsql::Setup. PLSQL code to create the staging table.sql"
    },
    {
      "node_type": "table",
      "name": "dw_water_quality",
      "properties": {
        "table_source": "referenced",
        "schema": "",
        "operation_type": "SELECT",
        "sql_semantics": {
          "joins": [
            {
              "left_table": {
                "name": "dw_water_quality",
                "alias": null,
                "schema": null
              },
              "right_table": {
                "name": "dimLocationTable",
                "alias": "l",
                "schema": null
              },
              "join_type": "INNER JOIN"
            },
            {
              "left_table": {
                "name": "dw_water_quality",
                "alias": null,
                "schema": null
              },
              "right_table": {
                "name": "dimPurposeTable",
                "alias": "p",
                "schema": null
              },
              "join_type": "INNER JOIN"
            },
            {
              "left_table": {
                "name": "dw_water_quality",
                "alias": null,
                "schema": null
              },
              "right_table": {
                "name": "dimComplianceTable",
                "alias": "c",
                "schema": null
              },
              "join_type": "INNER JOIN"
            },
            {
              "left_table": {
                "name": "dw_water_quality",
                "alias": null,
                "schema": null
              },
              "right_table": {
                "name": "dimSampleTable",
                "alias": "sm",
                "schema": null
              },
              "join_type": "INNER JOIN"
            },
            {
              "left_table": {
                "name": "dw_water_quality",
                "alias": null,
                "schema": null
              },
              "right_table": {
                "name": "dimSensorTable",
                "alias": "s",
                "schema": null
              },
              "join_type": "INNER JOIN"
            },
            {
              "left_table": {
                "name": "dw_water_quality",
                "alias": null,
                "schema": null
              },
              "right_table": {
                "name": "dimTimeTable",
                "alias": "t",
                "schema": null
              },
              "join_type": "INNER JOIN"
            }
          ],
          "tables": [
            {
              "name": "dw_water_quality",
              "alias": null,
              "schema": null
            },
            {
              "name": "dimLocationTable",
              "alias": "l",
              "schema": null
            },
            {
              "name": "dimPurposeTable",
              "alias": "p",
              "schema": null
            },
            {
              "name": "dimComplianceTable",
              "alias": "c",
              "schema": null
            },
            {
              "name": "dimSampleTable",
              "alias": "sm",
              "schema": null
            },
            {
              "name": "dimSensorTable",
              "alias": "s",
              "schema": null
            },
            {
              "name": "dimTimeTable",
              "alias": "t",
              "schema": null
            }
          ],
          "columns": [
            {
              "expression": "DISTINCT samplesamplingPoint",
              "alias": null,
              "source_table": null,
              "source_alias": null,
              "column_name": "DISTINCT samplesamplingPoint"
            },
            {
              "expression": "samplesamplingPointnotation",
              "alias": null,
              "source_table": null,
              "source_alias": null,
              "column_name": "samplesamplingPointnotation"
            },
            {
              "expression": "samplesamplingPointlabel",
              "alias": null,
              "source_table": null,
              "source_alias": null,
              "column_name": "samplesamplingPointlabel"
            },
            {
              "expression": "samplesamplingPointeasting",
              "alias": null,
              "source_table": null,
              "source_alias": null,
              "column_name": "samplesamplingPointeasting"
            },
            {
              "expression": "samplesamplingPointnorthing",
              "alias": null,
              "source_table": null,
              "source_alias": null,
              "column_name": "samplesamplingPointnorthing"
            }
          ],
          "where_clause": null
        },
        "cleaned_expressions": [
          {
            "original": "DISTINCT samplesamplingPoint",
            "cleaned": "DISTINCT samplesamplingPoint",
            "column_name": "DISTINCT samplesamplingPoint"
          },
          {
            "original": "samplesamplingPointnotation",
            "cleaned": "samplesamplingPointnotation",
            "column_name": "samplesamplingPointnotation"
          },
          {
            "original": "samplesamplingPointlabel",
            "cleaned": "samplesamplingPointlabel",
            "column_name": "samplesamplingPointlabel"
          },
          {
            "original": "samplesamplingPointeasting",
            "cleaned": "samplesamplingPointeasting",
            "column_name": "samplesamplingPointeasting"
          },
          {
            "original": "samplesamplingPointnorthing",
            "cleaned": "samplesamplingPointnorthing",
            "column_name": "samplesamplingPointnorthing"
          }
        ],
        "fqn": "oracle.default.public.dw_water_quality",
        "qualified_name": "oracle.default.public.dw_water_quality",
        "source_file_path": "C:\\Users\\hibnc\\Documents\\stage3\\MZCODE\\temp\\Water-Quality-DW-on-Oracle-Database-main\\SQL queries and PLSQL codes\\2. LOAD PHASE !!!!! Create dimension and fact tables and load them with PLSQL Cursors.sql",
        "source_file_type": "sql",
        "technology": "ORACLE",
        "xml_path": "//plsql_operation[@name='dw_water_quality']"
      },
      "context": {},
      "id": "table::dw_water_quality"
    },
    {
      "node_type": "operation",
      "name": "data_analysis_task",
      "properties": {
        "file": "C:\\Users\\hibnc\\Documents\\stage3\\MZCODE\\temp\\Water-Quality-DW-on-Oracle-Database-main\\SQL queries and PLSQL codes\\1. Data exploration column analysis using SQL queries and data cleaning.sql",
        "operation_subtype": "DATA_FLOW",
        "sql_statements_count": 9,
        "block_size": 2668,
        "task_name": "data_analysis_task",
        "has_explicit_task_name": true,
        "column_lineage": [
          {
            "source_expression": "DISTINCT ID1",
            "cleaned_expression": "DISTINCT ID1",
            "target_column": "DISTINCT ID1",
            "transformation_type": "DIRECT",
            "sql_statement": "SELECT DISTINCT ID1 FROM dw_water_quality",
            "source_table": null,
            "source_alias": null
          },
          {
            "source_expression": "determinandlabel",
            "cleaned_expression": "determinandlabel",
            "target_column": "determinandlabel",
            "transformation_type": "DIRECT",
            "sql_statement": "SELECT determinandlabel, COUNT(determinandlabel) cnt FROM dw_water_quality GROUP BY determinandlabel...",
            "source_table": null,
            "source_alias": null
          },
          {
            "source_expression": "COUNT(determinandlabel) cnt",
            "cleaned_expression": "AGGREGATE_WITH_ALIAS",
            "target_column": "COUNT(determinandlabel) cnt",
            "transformation_type": "TRANSFORMED",
            "sql_statement": "SELECT determinandlabel, COUNT(determinandlabel) cnt FROM dw_water_quality GROUP BY determinandlabel...",
            "source_table": null,
            "source_alias": null
          },
          {
            "source_expression": "determinandunitlabel",
            "cleaned_expression": "determinandunitlabel",
            "target_column": "determinandunitlabel",
            "transformation_type": "DIRECT",
            "sql_statement": "SELECT determinandunitlabel, COUNT(determinandunitlabel) cnt FROM dw_water_quality GROUP BY determin...",
            "source_table": null,
            "source_alias": null
          },
          {
            "source_expression": "COUNT(determinandunitlabel) cnt",
            "cleaned_expression": "AGGREGATE_WITH_ALIAS",
            "target_column": "COUNT(determinandunitlabel) cnt",
            "transformation_type": "TRANSFORMED",
            "sql_statement": "SELECT determinandunitlabel, COUNT(determinandunitlabel) cnt FROM dw_water_quality GROUP BY determin...",
            "source_table": null,
            "source_alias": null
          },
          {
            "source_expression": "DISTINCT s.determinanddefinition",
            "cleaned_expression": "DISTINCT s.determinanddefinition",
            "target_column": "DISTINCT s.determinanddefinition",
            "transformation_type": "DIRECT",
            "sql_statement": "SELECT DISTINCT s.determinanddefinition FROM ( SELECT * FROM dw_water_quality WHERE determinandunitl...",
            "source_table": null,
            "source_alias": null
          },
          {
            "source_expression": "s.ID_",
            "cleaned_expression": "s.ID_",
            "target_column": "ID_",
            "transformation_type": "COMPUTED",
            "sql_statement": "SELECT s.ID_ FROM ( SELECT * FROM dw_water_quality WHERE determinandunitlabel = 'unitless' UNION SEL...",
            "source_table": null,
            "source_alias": "s"
          }
        ],
        "total_column_mappings": 7,
        "source_file_path": "C:\\Users\\hibnc\\Documents\\stage3\\MZCODE\\temp\\Water-Quality-DW-on-Oracle-Database-main\\SQL queries and PLSQL codes\\1. Data exploration column analysis using SQL queries and data cleaning.sql",
        "source_file_type": "sql",
        "technology": "ORACLE",
        "xml_path": "//plsql_operation[@name='data_analysis_task']",
        "sql_semantics": [
          {
            "original_query": "SELECT * FROM dw_water_quality",
            "tables": [
              {
                "name": "dw_water_quality",
                "alias": null,
                "schema": null,
                "full_name": "dw_water_quality"
              }
            ],
            "joins": [],
            "columns": [],
            "inline_views": [],
            "where_clause": null,
            "migration_metadata": {
              "table_count": 1,
              "join_count": 0,
              "column_count": 0,
              "inline_view_count": 0,
              "has_aliases": false,
              "has_joins": false,
              "has_inline_views": false,
              "join_types": []
            }
          },
          {
            "original_query": "SELECT DISTINCT ID1 FROM dw_water_quality",
            "tables": [
              {
                "name": "dw_water_quality",
                "alias": null,
                "schema": null,
                "full_name": "dw_water_quality"
              }
            ],
            "joins": [],
            "columns": [
              {
                "expression": "DISTINCT ID1",
                "alias": null,
                "source_table": null,
                "source_alias": null,
                "column_name": "DISTINCT ID1",
                "effective_name": "DISTINCT ID1"
              }
            ],
            "inline_views": [],
            "where_clause": null,
            "migration_metadata": {
              "table_count": 1,
              "join_count": 0,
              "column_count": 1,
              "inline_view_count": 0,
              "has_aliases": false,
              "has_joins": false,
              "has_inline_views": false,
              "join_types": []
            }
          },
          {
            "original_query": "SELECT * FROM dw_water_quality WHERE ID1 IS NULL",
            "tables": [
              {
                "name": "dw_water_quality",
                "alias": null,
                "schema": null,
                "full_name": "dw_water_quality"
              }
            ],
            "joins": [],
            "columns": [],
            "inline_views": [],
            "where_clause": null,
            "migration_metadata": {
              "table_count": 1,
              "join_count": 0,
              "column_count": 0,
              "inline_view_count": 0,
              "has_aliases": false,
              "has_joins": false,
              "has_inline_views": false,
              "join_types": []
            }
          },
          {
            "original_query": "SELECT determinandlabel, COUNT(determinandlabel) cnt FROM dw_water_quality GROUP BY determinandlabel ORDER BY cnt",
            "tables": [
              {
                "name": "dw_water_quality",
                "alias": null,
                "schema": null,
                "full_name": "dw_water_quality"
              }
            ],
            "joins": [],
            "columns": [
              {
                "expression": "determinandlabel",
                "alias": null,
                "source_table": null,
                "source_alias": null,
                "column_name": "determinandlabel",
                "effective_name": "determinandlabel"
              },
              {
                "expression": "COUNT(determinandlabel) cnt",
                "alias": null,
                "source_table": null,
                "source_alias": null,
                "column_name": "COUNT(determinandlabel) cnt",
                "effective_name": "COUNT(determinandlabel) cnt"
              }
            ],
            "inline_views": [],
            "where_clause": null,
            "migration_metadata": {
              "table_count": 1,
              "join_count": 0,
              "column_count": 2,
              "inline_view_count": 0,
              "has_aliases": false,
              "has_joins": false,
              "has_inline_views": false,
              "join_types": []
            }
          },
          {
            "original_query": "SELECT determinandunitlabel, COUNT(determinandunitlabel) cnt FROM dw_water_quality GROUP BY determinandunitlabel ORDER BY cnt",
            "tables": [
              {
                "name": "dw_water_quality",
                "alias": null,
                "schema": null,
                "full_name": "dw_water_quality"
              }
            ],
            "joins": [],
            "columns": [
              {
                "expression": "determinandunitlabel",
                "alias": null,
                "source_table": null,
                "source_alias": null,
                "column_name": "determinandunitlabel",
                "effective_name": "determinandunitlabel"
              },
              {
                "expression": "COUNT(determinandunitlabel) cnt",
                "alias": null,
                "source_table": null,
                "source_alias": null,
                "column_name": "COUNT(determinandunitlabel) cnt",
                "effective_name": "COUNT(determinandunitlabel) cnt"
              }
            ],
            "inline_views": [],
            "where_clause": null,
            "migration_metadata": {
              "table_count": 1,
              "join_count": 0,
              "column_count": 2,
              "inline_view_count": 0,
              "has_aliases": false,
              "has_joins": false,
              "has_inline_views": false,
              "join_types": []
            }
          },
          {
            "original_query": "SELECT * FROM dw_water_quality WHERE determinandunitlabel = 'unitless' UNION SELECT * FROM dw_water_quality WHERE determinandunitlabel = 'text' UNION SELECT * FROM dw_water_quality WHERE determinandunitlabel = 'coded'",
            "tables": [
              {
                "name": "dw_water_quality",
                "alias": null,
                "schema": null,
                "full_name": "dw_water_quality"
              }
            ],
            "joins": [],
            "columns": [],
            "inline_views": [],
            "where_clause": null,
            "migration_metadata": {
              "table_count": 1,
              "join_count": 0,
              "column_count": 0,
              "inline_view_count": 0,
              "has_aliases": false,
              "has_joins": false,
              "has_inline_views": false,
              "join_types": []
            }
          },
          {
            "original_query": "SELECT DISTINCT s.determinanddefinition FROM ( SELECT * FROM dw_water_quality WHERE determinandunitlabel = 'unitless' UNION SELECT * FROM dw_water_quality WHERE determinandunitlabel = 'text' UNION SELECT * FROM dw_water_quality WHERE determinandunitlabel = 'coded' ) s",
            "tables": [
              {
                "name": "dw_water_quality",
                "alias": null,
                "schema": null,
                "full_name": "dw_water_quality"
              }
            ],
            "joins": [],
            "columns": [
              {
                "expression": "DISTINCT s.determinanddefinition",
                "alias": null,
                "source_table": null,
                "source_alias": null,
                "column_name": "DISTINCT s.determinanddefinition",
                "effective_name": "DISTINCT s.determinanddefinition"
              }
            ],
            "inline_views": [],
            "where_clause": null,
            "migration_metadata": {
              "table_count": 1,
              "join_count": 0,
              "column_count": 1,
              "inline_view_count": 0,
              "has_aliases": false,
              "has_joins": false,
              "has_inline_views": false,
              "join_types": []
            }
          },
          {
            "original_query": "SELECT s.ID_ FROM ( SELECT * FROM dw_water_quality WHERE determinandunitlabel = 'unitless' UNION SELECT * FROM dw_water_quality WHERE determinandunitlabel = 'text' UNION SELECT * FROM dw_water_quality WHERE determinandunitlabel = 'coded' ) s )",
            "tables": [
              {
                "name": "dw_water_quality",
                "alias": null,
                "schema": null,
                "full_name": "dw_water_quality"
              }
            ],
            "joins": [],
            "columns": [
              {
                "expression": "s.ID_",
                "alias": null,
                "source_table": null,
                "source_alias": "s",
                "column_name": "ID_",
                "effective_name": "ID_"
              }
            ],
            "inline_views": [],
            "where_clause": null,
            "migration_metadata": {
              "table_count": 1,
              "join_count": 0,
              "column_count": 1,
              "inline_view_count": 0,
              "has_aliases": false,
              "has_joins": false,
              "has_inline_views": false,
              "join_types": []
            }
          },
          {
            "original_query": "SELECT * FROM dw_water_quality",
            "tables": [
              {
                "name": "dw_water_quality",
                "alias": null,
                "schema": null,
                "full_name": "dw_water_quality"
              }
            ],
            "joins": [],
            "columns": [],
            "inline_views": [],
            "where_clause": null,
            "migration_metadata": {
              "table_count": 1,
              "join_count": 0,
              "column_count": 0,
              "inline_view_count": 0,
              "has_aliases": false,
              "has_joins": false,
              "has_inline_views": false,
              "join_types": []
            }
          }
        ]
      },
      "context": {},
      "id": "plsql::1. Data exploration column analysis using SQL queries and data cleaning.sql::data_analysis_task"
    },
    {
      "node_type": "pipeline",
      "name": "1. Data exploration column analysis using SQL queries and data cleaning",
      "properties": {
        "file": "C:\\Users\\hibnc\\Documents\\stage3\\MZCODE\\temp\\Water-Quality-DW-on-Oracle-Database-main\\SQL queries and PLSQL codes\\1. Data exploration column analysis using SQL queries and data cleaning.sql",
        "technology": "ORACLE",
        "fqn": "oracle/1. Data exploration column analysis using SQL queries and data cleaning",
        "qualified_name": "oracle/1. Data exploration column analysis using SQL queries and data cleaning",
        "source_file_path": "C:\\Users\\hibnc\\Documents\\stage3\\MZCODE\\temp\\Water-Quality-DW-on-Oracle-Database-main\\SQL queries and PLSQL codes\\1. Data exploration column analysis using SQL queries and data cleaning.sql",
        "source_file_type": "sql",
        "xml_path": "//plsql_operation[@name='1. Data exploration column analysis using SQL queries and data cleaning']",
        "execution_priority": 1,
        "upstream_dependencies": [],
        "downstream_dependencies": [],
        "shared_tables_used": [
          "table::dw_water_quality"
        ],
        "shared_connections_used": [],
        "cross_package_analysis_complete": true
      },
      "context": {},
      "id": "plsql::1. Data exploration column analysis using SQL queries and data cleaning.sql"
    },
    {
      "node_type": "operation",
      "name": "COUNT",
      "properties": {
        "technology": "ORACLE"
      },
      "context": {},
      "id": "plsql::COUNT"
    },
    {
      "node_type": "operation",
      "name": "cursor_processing_c_location",
      "properties": {
        "file": "C:\\Users\\hibnc\\Documents\\stage3\\MZCODE\\temp\\Water-Quality-DW-on-Oracle-Database-main\\SQL queries and PLSQL codes\\2. LOAD PHASE !!!!! Create dimension and fact tables and load them with PLSQL Cursors.sql",
        "operation_subtype": "DATA_FLOW",
        "sql_statements_count": 6,
        "block_size": 7208,
        "task_name": "cursor_processing_c_location",
        "has_explicit_task_name": true,
        "cursor_lineage": [
          {
            "cursor_name": "c_location",
            "operation_type": "CURSOR_LOAD",
            "input_columns": [
              {
                "table_name": "dw_water_quality",
                "schema": "public",
                "fqn": "oracle.default.public.dw_water_quality"
              }
            ],
            "output_columns": [
              {
                "column_name": "DISTINCT samplesamplingPoint",
                "alias": null,
                "expression": "DISTINCT samplesamplingPoint",
                "source_table": null
              },
              {
                "column_name": "samplesamplingPointnotation",
                "alias": null,
                "expression": "samplesamplingPointnotation",
                "source_table": null
              },
              {
                "column_name": "samplesamplingPointlabel",
                "alias": null,
                "expression": "samplesamplingPointlabel",
                "source_table": null
              },
              {
                "column_name": "samplesamplingPointeasting",
                "alias": null,
                "expression": "samplesamplingPointeasting",
                "source_table": null
              },
              {
                "column_name": "samplesamplingPointnorthing",
                "alias": null,
                "expression": "samplesamplingPointnorthing",
                "source_table": null
              }
            ],
            "source_sql": "SELECT DISTINCT \n        samplesamplingPoint, \n        samplesamplingPointnotation, \n        samplesamplingPointlabel,  \n        samplesamplingPointeasting, \n        samplesamplingPointnorthing\n    FROM dw_water_quality"
          },
          {
            "cursor_name": "c_purpose",
            "operation_type": "CURSOR_LOAD",
            "input_columns": [
              {
                "table_name": "dw_water_quality",
                "schema": "public",
                "fqn": "oracle.default.public.dw_water_quality"
              }
            ],
            "output_columns": [
              {
                "column_name": "DISTINCT samplepurposelabel",
                "alias": null,
                "expression": "DISTINCT samplepurposelabel",
                "source_table": null
              }
            ],
            "source_sql": "SELECT DISTINCT \n        samplepurposelabel\n    FROM dw_water_quality"
          },
          {
            "cursor_name": "c_compliance",
            "operation_type": "CURSOR_LOAD",
            "input_columns": [
              {
                "table_name": "dw_water_quality",
                "schema": "public",
                "fqn": "oracle.default.public.dw_water_quality"
              }
            ],
            "output_columns": [
              {
                "column_name": "DISTINCT sampleisComplianceSample",
                "alias": null,
                "expression": "DISTINCT sampleisComplianceSample",
                "source_table": null
              }
            ],
            "source_sql": "SELECT DISTINCT \n        sampleisComplianceSample\n    FROM dw_water_quality"
          },
          {
            "cursor_name": "c_sample",
            "operation_type": "CURSOR_LOAD",
            "input_columns": [
              {
                "table_name": "dw_water_quality",
                "schema": "public",
                "fqn": "oracle.default.public.dw_water_quality"
              }
            ],
            "output_columns": [
              {
                "column_name": "DISTINCT samplesampledMaterialTypelabel",
                "alias": null,
                "expression": "DISTINCT samplesampledMaterialTypelabel",
                "source_table": null
              }
            ],
            "source_sql": "SELECT DISTINCT \n        samplesampledMaterialTypelabel\n    FROM dw_water_quality"
          },
          {
            "cursor_name": "c_sensor",
            "operation_type": "CURSOR_LOAD",
            "input_columns": [
              {
                "table_name": "dw_water_quality",
                "schema": "public",
                "fqn": "oracle.default.public.dw_water_quality"
              }
            ],
            "output_columns": [
              {
                "column_name": "DISTINCT determinandlabel",
                "alias": null,
                "expression": "DISTINCT determinandlabel",
                "source_table": null
              },
              {
                "column_name": "determinanddefinition",
                "alias": null,
                "expression": "determinanddefinition",
                "source_table": null
              },
              {
                "column_name": "determinandnotation",
                "alias": null,
                "expression": "determinandnotation",
                "source_table": null
              },
              {
                "column_name": "determinandunitlabel",
                "alias": null,
                "expression": "determinandunitlabel",
                "source_table": null
              }
            ],
            "source_sql": "SELECT DISTINCT \n        determinandlabel, \n        determinanddefinition, \n        determinandnotation, \n        determinandunitlabel\n    FROM dw_water_quality"
          },
          {
            "cursor_name": "c_time",
            "operation_type": "CURSOR_LOAD",
            "input_columns": [
              {
                "table_name": "dw_water_quality",
                "schema": "public",
                "fqn": "oracle.default.public.dw_water_quality"
              }
            ],
            "output_columns": [
              {
                "column_name": "DISTINCT samplesampleDateTime",
                "alias": null,
                "expression": "DISTINCT samplesampleDateTime",
                "source_table": null
              }
            ],
            "source_sql": "SELECT DISTINCT \n        samplesampleDateTime\n    FROM dw_water_quality"
          },
          {
            "cursor_name": "c_fact",
            "operation_type": "CURSOR_LOAD",
            "input_columns": [
              {
                "table_name": "dw_water_quality",
                "schema": "public",
                "fqn": "oracle.default.public.dw_water_quality"
              },
              {
                "table_name": "dimLocationTable",
                "schema": "public",
                "fqn": "oracle.default.public.dimLocationTable"
              },
              {
                "table_name": "dimPurposeTable",
                "schema": "public",
                "fqn": "oracle.default.public.dimPurposeTable"
              },
              {
                "table_name": "dimComplianceTable",
                "schema": "public",
                "fqn": "oracle.default.public.dimComplianceTable"
              },
              {
                "table_name": "dimSampleTable",
                "schema": "public",
                "fqn": "oracle.default.public.dimSampleTable"
              },
              {
                "table_name": "dimSensorTable",
                "schema": "public",
                "fqn": "oracle.default.public.dimSensorTable"
              },
              {
                "table_name": "dimTimeTable",
                "schema": "public",
                "fqn": "oracle.default.public.dimTimeTable"
              }
            ],
            "output_columns": [
              {
                "column_name": "locationID",
                "alias": null,
                "expression": "l.locationID",
                "source_table": "dimLocationTable"
              },
              {
                "column_name": "purposeID",
                "alias": null,
                "expression": "p.purposeID",
                "source_table": "dimPurposeTable"
              },
              {
                "column_name": "complianceID",
                "alias": null,
                "expression": "c.complianceID",
                "source_table": "dimComplianceTable"
              },
              {
                "column_name": "sampleID",
                "alias": null,
                "expression": "sm.sampleID",
                "source_table": "dimSampleTable"
              },
              {
                "column_name": "timeID",
                "alias": null,
                "expression": "t.timeID",
                "source_table": "dimTimeTable"
              },
              {
                "column_name": "sensorID",
                "alias": null,
                "expression": "s.sensorID",
                "source_table": "dimSensorTable"
              },
              {
                "column_name": "result",
                "alias": null,
                "expression": "wq.result",
                "source_table": "dw_water_quality"
              },
              {
                "column_name": "ID_",
                "alias": null,
                "expression": "wq.ID_",
                "source_table": "dw_water_quality"
              },
              {
                "column_name": "samplesamplingPointlabel",
                "alias": null,
                "expression": "wq.samplesamplingPointlabel",
                "source_table": "dw_water_quality"
              },
              {
                "column_name": "determinandlabel",
                "alias": null,
                "expression": "wq.determinandlabel",
                "source_table": "dw_water_quality"
              },
              {
                "column_name": "samplesampleDateTime",
                "alias": null,
                "expression": "wq.samplesampleDateTime",
                "source_table": "dw_water_quality"
              }
            ],
            "source_sql": "SELECT\n        l.locationID,\n        p.purposeID,\n        c.complianceID,\n        sm.sampleID,\n        t.timeID, \n        s.sensorID,\n        wq.result,\n        wq.ID_,\n        wq.samplesamplingPointlabel,\n        wq.determinandlabel,\n        wq.samplesampleDateTime\n    FROM dw_water_quality wq\n        INNER JOIN dimLocationTable l \n    ON wq.samplesamplingPointlabel = l.measurementLocation\n            INNER JOIN dimPurposeTable p \n    ON wq.samplepurposelabel = p.samplingPurpose\n        INNER JOIN dimComplianceTable c \n    ON wq.sampleisComplianceSample = c.sampleCompliance\n        INNER JOIN dimSampleTable sm \n    ON wq.samplesampledMaterialTypelabel = sm.samplingMaterial\n        INNER JOIN dimSensorTable s \n    ON wq.determinandlabel = s.sensorType\n        INNER JOIN dimTimeTable t \n    ON wq.samplesampleDateTime = t.measurementDate"
          }
        ],
        "has_load_operations": true,
        "cursor_count": 7,
        "source_file_path": "C:\\Users\\hibnc\\Documents\\stage3\\MZCODE\\temp\\Water-Quality-DW-on-Oracle-Database-main\\SQL queries and PLSQL codes\\2. LOAD PHASE !!!!! Create dimension and fact tables and load them with PLSQL Cursors.sql",
        "source_file_type": "sql",
        "technology": "ORACLE",
        "xml_path": "//plsql_operation[@name='cursor_processing_c_location']",
        "sql_semantics": [
          {
            "original_query": "SELECT * FROM dimLocationTable",
            "tables": [
              {
                "name": "dimLocationTable",
                "alias": null,
                "schema": null,
                "full_name": "dimLocationTable"
              }
            ],
            "joins": [],
            "columns": [],
            "inline_views": [],
            "where_clause": null,
            "migration_metadata": {
              "table_count": 1,
              "join_count": 0,
              "column_count": 0,
              "inline_view_count": 0,
              "has_aliases": false,
              "has_joins": false,
              "has_inline_views": false,
              "join_types": []
            }
          },
          {
            "original_query": "SELECT * FROM dimPurposeTable",
            "tables": [
              {
                "name": "dimPurposeTable",
                "alias": null,
                "schema": null,
                "full_name": "dimPurposeTable"
              }
            ],
            "joins": [],
            "columns": [],
            "inline_views": [],
            "where_clause": null,
            "migration_metadata": {
              "table_count": 1,
              "join_count": 0,
              "column_count": 0,
              "inline_view_count": 0,
              "has_aliases": false,
              "has_joins": false,
              "has_inline_views": false,
              "join_types": []
            }
          },
          {
            "original_query": "SELECT * FROM dimComplianceTable",
            "tables": [
              {
                "name": "dimComplianceTable",
                "alias": null,
                "schema": null,
                "full_name": "dimComplianceTable"
              }
            ],
            "joins": [],
            "columns": [],
            "inline_views": [],
            "where_clause": null,
            "migration_metadata": {
              "table_count": 1,
              "join_count": 0,
              "column_count": 0,
              "inline_view_count": 0,
              "has_aliases": false,
              "has_joins": false,
              "has_inline_views": false,
              "join_types": []
            }
          },
          {
            "original_query": "SELECT * FROM dimSampleTable",
            "tables": [
              {
                "name": "dimSampleTable",
                "alias": null,
                "schema": null,
                "full_name": "dimSampleTable"
              }
            ],
            "joins": [],
            "columns": [],
            "inline_views": [],
            "where_clause": null,
            "migration_metadata": {
              "table_count": 1,
              "join_count": 0,
              "column_count": 0,
              "inline_view_count": 0,
              "has_aliases": false,
              "has_joins": false,
              "has_inline_views": false,
              "join_types": []
            }
          },
          {
            "original_query": "SELECT * FROM dimSensorTable",
            "tables": [
              {
                "name": "dimSensorTable",
                "alias": null,
                "schema": null,
                "full_name": "dimSensorTable"
              }
            ],
            "joins": [],
            "columns": [],
            "inline_views": [],
            "where_clause": null,
            "migration_metadata": {
              "table_count": 1,
              "join_count": 0,
              "column_count": 0,
              "inline_view_count": 0,
              "has_aliases": false,
              "has_joins": false,
              "has_inline_views": false,
              "join_types": []
            }
          },
          {
            "original_query": "SELECT * FROM dimTimeTable",
            "tables": [
              {
                "name": "dimTimeTable",
                "alias": null,
                "schema": null,
                "full_name": "dimTimeTable"
              }
            ],
            "joins": [],
            "columns": [],
            "inline_views": [],
            "where_clause": null,
            "migration_metadata": {
              "table_count": 1,
              "join_count": 0,
              "column_count": 0,
              "inline_view_count": 0,
              "has_aliases": false,
              "has_joins": false,
              "has_inline_views": false,
              "join_types": []
            }
          }
        ]
      },
      "context": {},
      "id": "plsql::2. LOAD PHASE !!!!! Create dimension and fact tables and load them with PLSQL Cursors.sql::cursor_processing_c_location"
    },
    {
      "node_type": "pipeline",
      "name": "2. LOAD PHASE !!!!! Create dimension and fact tables and load them with PLSQL Cursors",
      "properties": {
        "file": "C:\\Users\\hibnc\\Documents\\stage3\\MZCODE\\temp\\Water-Quality-DW-on-Oracle-Database-main\\SQL queries and PLSQL codes\\2. LOAD PHASE !!!!! Create dimension and fact tables and load them with PLSQL Cursors.sql",
        "technology": "ORACLE",
        "fqn": "oracle/2. LOAD PHASE !!!!! Create dimension and fact tables and load them with PLSQL Cursors",
        "qualified_name": "oracle/2. LOAD PHASE !!!!! Create dimension and fact tables and load them with PLSQL Cursors",
        "source_file_path": "C:\\Users\\hibnc\\Documents\\stage3\\MZCODE\\temp\\Water-Quality-DW-on-Oracle-Database-main\\SQL queries and PLSQL codes\\2. LOAD PHASE !!!!! Create dimension and fact tables and load them with PLSQL Cursors.sql",
        "source_file_type": "sql",
        "xml_path": "//plsql_operation[@name='2. LOAD PHASE !!!!! Create dimension and fact tables and load them with PLSQL Cursors']",
        "execution_priority": 1,
        "upstream_dependencies": [],
        "downstream_dependencies": [],
        "shared_tables_used": [
          "table::dw_water_quality",
          "table::dimLocationTable",
          "table::dimSensorTable",
          "table::dimTimeTable",
          "table::factMeasurementsTable"
        ],
        "shared_connections_used": [],
        "cross_package_analysis_complete": true
      },
      "context": {},
      "id": "plsql::2. LOAD PHASE !!!!! Create dimension and fact tables and load them with PLSQL Cursors.sql"
    },
    {
      "node_type": "table",
      "name": "dimLocationTable",
      "properties": {
        "table_source": "referenced",
        "schema": "",
        "operation_type": "SELECT",
        "sql_semantics": {
          "joins": [
            {
              "left_table": {
                "name": "factMeasurementsTable",
                "alias": "f",
                "schema": null
              },
              "right_table": {
                "name": "factMeasurementsTable",
                "alias": "f",
                "schema": null
              },
              "join_type": "INNER JOIN"
            },
            {
              "left_table": {
                "name": "factMeasurementsTable",
                "alias": "f",
                "schema": null
              },
              "right_table": {
                "name": "dimTimeTable",
                "alias": "t",
                "schema": null
              },
              "join_type": "INNER JOIN"
            },
            {
              "left_table": {
                "name": "factMeasurementsTable",
                "alias": "f",
                "schema": null
              },
              "right_table": {
                "name": "factMeasurementsTable",
                "alias": "f",
                "schema": null
              },
              "join_type": "INNER JOIN"
            },
            {
              "left_table": {
                "name": "factMeasurementsTable",
                "alias": "f",
                "schema": null
              },
              "right_table": {
                "name": "dimTimeTable",
                "alias": "t",
                "schema": null
              },
              "join_type": "INNER JOIN"
            },
            {
              "left_table": {
                "name": "factMeasurementsTable",
                "alias": "f",
                "schema": null
              },
              "right_table": {
                "name": "factMeasurementsTable",
                "alias": "f",
                "schema": null
              },
              "join_type": "INNER JOIN"
            },
            {
              "left_table": {
                "name": "factMeasurementsTable",
                "alias": "f",
                "schema": null
              },
              "right_table": {
                "name": "dimTimeTable",
                "alias": "t",
                "schema": null
              },
              "join_type": "INNER JOIN"
            },
            {
              "left_table": {
                "name": "factMeasurementsTable",
                "alias": "f",
                "schema": null
              },
              "right_table": {
                "name": "factMeasurementsTable",
                "alias": "f",
                "schema": null
              },
              "join_type": "INNER JOIN"
            },
            {
              "left_table": {
                "name": "factMeasurementsTable",
                "alias": "f",
                "schema": null
              },
              "right_table": {
                "name": "dimTimeTable",
                "alias": "t",
                "schema": null
              },
              "join_type": "INNER JOIN"
            },
            {
              "left_table": {
                "name": "factMeasurementsTable",
                "alias": "f",
                "schema": null
              },
              "right_table": {
                "name": "factMeasurementsTable",
                "alias": "f",
                "schema": null
              },
              "join_type": "INNER JOIN"
            },
            {
              "left_table": {
                "name": "factMeasurementsTable",
                "alias": "f",
                "schema": null
              },
              "right_table": {
                "name": "dimSensorTable",
                "alias": "s",
                "schema": null
              },
              "join_type": "INNER JOIN"
            },
            {
              "left_table": {
                "name": "factMeasurementsTable",
                "alias": "f",
                "schema": null
              },
              "right_table": {
                "name": "dimTimeTable",
                "alias": "t",
                "schema": null
              },
              "join_type": "INNER JOIN"
            }
          ],
          "tables": [
            {
              "name": "factMeasurementsTable",
              "alias": "f",
              "schema": null
            },
            {
              "name": "dimTimeTable",
              "alias": "t",
              "schema": null
            },
            {
              "name": "factMeasurementsTable",
              "alias": "f",
              "schema": null
            },
            {
              "name": "dimTimeTable",
              "alias": "t",
              "schema": null
            },
            {
              "name": "factMeasurementsTable",
              "alias": "f",
              "schema": null
            },
            {
              "name": "dimTimeTable",
              "alias": "t",
              "schema": null
            },
            {
              "name": "factMeasurementsTable",
              "alias": "f",
              "schema": null
            },
            {
              "name": "dimTimeTable",
              "alias": "t",
              "schema": null
            },
            {
              "name": "factMeasurementsTable",
              "alias": "f",
              "schema": null
            },
            {
              "name": "dimSensorTable",
              "alias": "s",
              "schema": null
            },
            {
              "name": "dimTimeTable",
              "alias": "t",
              "schema": null
            }
          ],
          "columns": [
            {
              "expression": "s.measurementMonth",
              "alias": null,
              "source_table": "dimSensorTable",
              "source_alias": "s",
              "column_name": "measurementMonth"
            },
            {
              "expression": "s.sensorType",
              "alias": null,
              "source_table": "dimSensorTable",
              "source_alias": "s",
              "column_name": "sensorType"
            },
            {
              "expression": "s.numberOfSensors",
              "alias": null,
              "source_table": "dimSensorTable",
              "source_alias": "s",
              "column_name": "numberOfSensors"
            }
          ],
          "where_clause": "s.sensorType = 'pH'"
        },
        "cleaned_expressions": [
          {
            "original": "s.measurementMonth",
            "cleaned": "s.measurementMonth",
            "column_name": "measurementMonth"
          },
          {
            "original": "s.sensorType",
            "cleaned": "s.sensorType",
            "column_name": "sensorType"
          },
          {
            "original": "s.numberOfSensors",
            "cleaned": "s.numberOfSensors",
            "column_name": "numberOfSensors"
          }
        ],
        "fqn": "oracle.default.public.dimLocationTable",
        "qualified_name": "oracle.default.public.dimLocationTable",
        "source_file_path": "C:\\Users\\hibnc\\Documents\\stage3\\MZCODE\\temp\\Water-Quality-DW-on-Oracle-Database-main\\SQL queries and PLSQL codes\\3. Query the data warehouse to get insights and answers to project questions.sql",
        "source_file_type": "sql",
        "technology": "ORACLE",
        "xml_path": "//plsql_operation[@name='dimLocationTable']"
      },
      "context": {},
      "id": "table::dimLocationTable"
    },
    {
      "node_type": "table",
      "name": "dimPurposeTable",
      "properties": {
        "create_statement": "CREATE TABLE dimPurposeTable (\n    purposeID INTEGER GENERATED ALWAYS AS IDENTITY,\n    samplingPurpose VARCHAR2(255),\n    CONSTRAINT pk_purposeID PRIMARY KEY (purposeID)\n    );",
        "table_source": "CREATE TABLE statement",
        "type_mapping": {
          "columns": [
            {
              "oracle_native_type": "INTEGER GENERATED ALWAYS AS IDENTITY",
              "parsed_type_info": {
                "base_type": "INTEGER"
              },
              "canonical_type": "INTEGER",
              "target_types": {
                "sql_server": "int",
                "postgresql": "integer",
                "mysql": "int"
              },
              "type_precision": null,
              "type_scale": null,
              "type_length": null,
              "nullable": null,
              "default_value": null,
              "conversion_confidence": 1.0,
              "potential_issues": [],
              "type_category": "numeric",
              "supports_indexing": true,
              "supports_sorting": true,
              "oracle_specific": false,
              "column_name": "purposeID"
            }
          ],
          "source_platform": "oracle",
          "target_platforms": [
            "sql_server",
            "postgresql"
          ],
          "mapping_confidence": 1.0
        },
        "fqn": "oracle.default.public.dimPurposeTable",
        "qualified_name": "oracle.default.public.dimPurposeTable",
        "technology": "ORACLE",
        "supported_platforms": [
          "sql_server",
          "postgresql"
        ],
        "type_mapping_enabled": true
      },
      "context": {},
      "id": "table::dimPurposeTable"
    },
    {
      "node_type": "table",
      "name": "dimComplianceTable",
      "properties": {
        "create_statement": "CREATE TABLE dimComplianceTable (\n    complianceID INTEGER GENERATED ALWAYS AS IDENTITY,\n    sampleCompliance INTEGER,\n    CONSTRAINT pk_complianceID PRIMARY KEY (complianceID)\n    );",
        "table_source": "CREATE TABLE statement",
        "type_mapping": {
          "columns": [
            {
              "oracle_native_type": "INTEGER GENERATED ALWAYS AS IDENTITY",
              "parsed_type_info": {
                "base_type": "INTEGER"
              },
              "canonical_type": "INTEGER",
              "target_types": {
                "sql_server": "int",
                "postgresql": "integer",
                "mysql": "int"
              },
              "type_precision": null,
              "type_scale": null,
              "type_length": null,
              "nullable": null,
              "default_value": null,
              "conversion_confidence": 1.0,
              "potential_issues": [],
              "type_category": "numeric",
              "supports_indexing": true,
              "supports_sorting": true,
              "oracle_specific": false,
              "column_name": "complianceID"
            },
            {
              "oracle_native_type": "INTEGER",
              "parsed_type_info": {
                "base_type": "INTEGER"
              },
              "canonical_type": "INTEGER",
              "target_types": {
                "sql_server": "int",
                "postgresql": "integer",
                "mysql": "int"
              },
              "type_precision": null,
              "type_scale": null,
              "type_length": null,
              "nullable": null,
              "default_value": null,
              "conversion_confidence": 1.0,
              "potential_issues": [],
              "type_category": "numeric",
              "supports_indexing": true,
              "supports_sorting": true,
              "oracle_specific": false,
              "column_name": "sampleCompliance"
            }
          ],
          "source_platform": "oracle",
          "target_platforms": [
            "sql_server",
            "postgresql"
          ],
          "mapping_confidence": 1.0
        },
        "fqn": "oracle.default.public.dimComplianceTable",
        "qualified_name": "oracle.default.public.dimComplianceTable",
        "technology": "ORACLE",
        "supported_platforms": [
          "sql_server",
          "postgresql"
        ],
        "type_mapping_enabled": true
      },
      "context": {},
      "id": "table::dimComplianceTable"
    },
    {
      "node_type": "table",
      "name": "dimSampleTable",
      "properties": {
        "create_statement": "CREATE TABLE dimSampleTable (\n    sampleID INTEGER GENERATED ALWAYS AS IDENTITY,\n    samplingMaterial VARCHAR2(255),\n    CONSTRAINT pk_sampleID PRIMARY KEY (sampleID)\n    );",
        "table_source": "CREATE TABLE statement",
        "type_mapping": {
          "columns": [
            {
              "oracle_native_type": "INTEGER GENERATED ALWAYS AS IDENTITY",
              "parsed_type_info": {
                "base_type": "INTEGER"
              },
              "canonical_type": "INTEGER",
              "target_types": {
                "sql_server": "int",
                "postgresql": "integer",
                "mysql": "int"
              },
              "type_precision": null,
              "type_scale": null,
              "type_length": null,
              "nullable": null,
              "default_value": null,
              "conversion_confidence": 1.0,
              "potential_issues": [],
              "type_category": "numeric",
              "supports_indexing": true,
              "supports_sorting": true,
              "oracle_specific": false,
              "column_name": "sampleID"
            }
          ],
          "source_platform": "oracle",
          "target_platforms": [
            "sql_server",
            "postgresql"
          ],
          "mapping_confidence": 1.0
        },
        "fqn": "oracle.default.public.dimSampleTable",
        "qualified_name": "oracle.default.public.dimSampleTable",
        "technology": "ORACLE",
        "supported_platforms": [
          "sql_server",
          "postgresql"
        ],
        "type_mapping_enabled": true
      },
      "context": {},
      "id": "table::dimSampleTable"
    },
    {
      "node_type": "table",
      "name": "dimSensorTable",
      "properties": {
        "table_source": "referenced",
        "schema": "",
        "operation_type": "SELECT",
        "sql_semantics": {
          "joins": [
            {
              "left_table": {
                "name": "factMeasurementsTable",
                "alias": "f",
                "schema": null
              },
              "right_table": {
                "name": "factMeasurementsTable",
                "alias": "f",
                "schema": null
              },
              "join_type": "INNER JOIN"
            },
            {
              "left_table": {
                "name": "factMeasurementsTable",
                "alias": "f",
                "schema": null
              },
              "right_table": {
                "name": "dimTimeTable",
                "alias": "t",
                "schema": null
              },
              "join_type": "INNER JOIN"
            },
            {
              "left_table": {
                "name": "factMeasurementsTable",
                "alias": "f",
                "schema": null
              },
              "right_table": {
                "name": "factMeasurementsTable",
                "alias": "f",
                "schema": null
              },
              "join_type": "INNER JOIN"
            },
            {
              "left_table": {
                "name": "factMeasurementsTable",
                "alias": "f",
                "schema": null
              },
              "right_table": {
                "name": "dimTimeTable",
                "alias": "t",
                "schema": null
              },
              "join_type": "INNER JOIN"
            },
            {
              "left_table": {
                "name": "factMeasurementsTable",
                "alias": "f",
                "schema": null
              },
              "right_table": {
                "name": "factMeasurementsTable",
                "alias": "f",
                "schema": null
              },
              "join_type": "INNER JOIN"
            },
            {
              "left_table": {
                "name": "factMeasurementsTable",
                "alias": "f",
                "schema": null
              },
              "right_table": {
                "name": "dimTimeTable",
                "alias": "t",
                "schema": null
              },
              "join_type": "INNER JOIN"
            },
            {
              "left_table": {
                "name": "factMeasurementsTable",
                "alias": "f",
                "schema": null
              },
              "right_table": {
                "name": "factMeasurementsTable",
                "alias": "f",
                "schema": null
              },
              "join_type": "INNER JOIN"
            },
            {
              "left_table": {
                "name": "factMeasurementsTable",
                "alias": "f",
                "schema": null
              },
              "right_table": {
                "name": "dimTimeTable",
                "alias": "t",
                "schema": null
              },
              "join_type": "INNER JOIN"
            },
            {
              "left_table": {
                "name": "factMeasurementsTable",
                "alias": "f",
                "schema": null
              },
              "right_table": {
                "name": "factMeasurementsTable",
                "alias": "f",
                "schema": null
              },
              "join_type": "INNER JOIN"
            },
            {
              "left_table": {
                "name": "factMeasurementsTable",
                "alias": "f",
                "schema": null
              },
              "right_table": {
                "name": "dimSensorTable",
                "alias": "s",
                "schema": null
              },
              "join_type": "INNER JOIN"
            },
            {
              "left_table": {
                "name": "factMeasurementsTable",
                "alias": "f",
                "schema": null
              },
              "right_table": {
                "name": "dimTimeTable",
                "alias": "t",
                "schema": null
              },
              "join_type": "INNER JOIN"
            }
          ],
          "tables": [
            {
              "name": "factMeasurementsTable",
              "alias": "f",
              "schema": null
            },
            {
              "name": "dimTimeTable",
              "alias": "t",
              "schema": null
            },
            {
              "name": "factMeasurementsTable",
              "alias": "f",
              "schema": null
            },
            {
              "name": "dimTimeTable",
              "alias": "t",
              "schema": null
            },
            {
              "name": "factMeasurementsTable",
              "alias": "f",
              "schema": null
            },
            {
              "name": "dimTimeTable",
              "alias": "t",
              "schema": null
            },
            {
              "name": "factMeasurementsTable",
              "alias": "f",
              "schema": null
            },
            {
              "name": "dimTimeTable",
              "alias": "t",
              "schema": null
            },
            {
              "name": "factMeasurementsTable",
              "alias": "f",
              "schema": null
            },
            {
              "name": "dimSensorTable",
              "alias": "s",
              "schema": null
            },
            {
              "name": "dimTimeTable",
              "alias": "t",
              "schema": null
            }
          ],
          "columns": [
            {
              "expression": "s.measurementMonth",
              "alias": null,
              "source_table": "dimSensorTable",
              "source_alias": "s",
              "column_name": "measurementMonth"
            },
            {
              "expression": "s.sensorType",
              "alias": null,
              "source_table": "dimSensorTable",
              "source_alias": "s",
              "column_name": "sensorType"
            },
            {
              "expression": "s.numberOfSensors",
              "alias": null,
              "source_table": "dimSensorTable",
              "source_alias": "s",
              "column_name": "numberOfSensors"
            }
          ],
          "where_clause": "s.sensorType = 'pH'"
        },
        "cleaned_expressions": [
          {
            "original": "s.measurementMonth",
            "cleaned": "s.measurementMonth",
            "column_name": "measurementMonth"
          },
          {
            "original": "s.sensorType",
            "cleaned": "s.sensorType",
            "column_name": "sensorType"
          },
          {
            "original": "s.numberOfSensors",
            "cleaned": "s.numberOfSensors",
            "column_name": "numberOfSensors"
          }
        ],
        "fqn": "oracle.default.public.dimSensorTable",
        "qualified_name": "oracle.default.public.dimSensorTable",
        "source_file_path": "C:\\Users\\hibnc\\Documents\\stage3\\MZCODE\\temp\\Water-Quality-DW-on-Oracle-Database-main\\SQL queries and PLSQL codes\\3. Query the data warehouse to get insights and answers to project questions.sql",
        "source_file_type": "sql",
        "technology": "ORACLE",
        "xml_path": "//plsql_operation[@name='dimSensorTable']"
      },
      "context": {},
      "id": "table::dimSensorTable"
    },
    {
      "node_type": "table",
      "name": "dimTimeTable",
      "properties": {
        "table_source": "referenced",
        "fqn": "oracle.default.public.dimTimeTable",
        "qualified_name": "oracle.default.public.dimTimeTable",
        "technology": "ORACLE"
      },
      "context": {},
      "id": "table::dimTimeTable"
    },
    {
      "node_type": "table",
      "name": "factMeasurementsTable",
      "properties": {
        "table_source": "referenced",
        "fqn": "oracle.default.public.factMeasurementsTable",
        "qualified_name": "oracle.default.public.factMeasurementsTable",
        "technology": "ORACLE"
      },
      "context": {},
      "id": "table::factMeasurementsTable"
    },
    {
      "node_type": "operation",
      "name": "anonymous_block",
      "properties": {
        "file": "C:\\Users\\hibnc\\Documents\\stage3\\MZCODE\\temp\\Water-Quality-DW-on-Oracle-Database-main\\SQL queries and PLSQL codes\\3. Query the data warehouse to get insights and answers to project questions.sql",
        "operation_subtype": "DATA_FLOW",
        "sql_statements_count": 5,
        "block_size": 2609,
        "task_name": "anonymous_block",
        "has_explicit_task_name": false,
        "column_lineage": [
          {
            "source_expression": "s.measurementMonth",
            "cleaned_expression": "s.measurementMonth",
            "target_column": "measurementMonth",
            "transformation_type": "COMPUTED",
            "sql_statement": "SELECT s.measurementMonth, s.sensorType, s.numberOfSensors FROM ( SELECT t.measurementMonth, EXTRACT...",
            "source_table": null,
            "source_alias": "s"
          },
          {
            "source_expression": "s.sensorType",
            "cleaned_expression": "s.sensorType",
            "target_column": "sensorType",
            "transformation_type": "COMPUTED",
            "sql_statement": "SELECT s.measurementMonth, s.sensorType, s.numberOfSensors FROM ( SELECT t.measurementMonth, EXTRACT...",
            "source_table": null,
            "source_alias": "s"
          },
          {
            "source_expression": "s.numberOfSensors",
            "cleaned_expression": "s.numberOfSensors",
            "target_column": "numberOfSensors",
            "transformation_type": "COMPUTED",
            "sql_statement": "SELECT s.measurementMonth, s.sensorType, s.numberOfSensors FROM ( SELECT t.measurementMonth, EXTRACT...",
            "source_table": null,
            "source_alias": "s"
          },
          {
            "source_expression": "t.measurementWeek",
            "cleaned_expression": "t.measurementWeek",
            "target_column": "measurementWeek",
            "transformation_type": "COMPUTED",
            "sql_statement": "SELECT t.measurementWeek, s.sensorType, COUNT(measurement) numberOfMeasurements FROM dimSensorTable ...",
            "source_table": "dimTimeTable",
            "source_alias": "t"
          },
          {
            "source_expression": "s.sensorType",
            "cleaned_expression": "s.sensorType",
            "target_column": "sensorType",
            "transformation_type": "COMPUTED",
            "sql_statement": "SELECT t.measurementWeek, s.sensorType, COUNT(measurement) numberOfMeasurements FROM dimSensorTable ...",
            "source_table": "dimSensorTable",
            "source_alias": "s"
          },
          {
            "source_expression": "COUNT(measurement) numberOfMeasurements",
            "cleaned_expression": "AGGREGATE_WITH_ALIAS",
            "target_column": "COUNT(measurement) numberOfMeasurements",
            "transformation_type": "TRANSFORMED",
            "sql_statement": "SELECT t.measurementWeek, s.sensorType, COUNT(measurement) numberOfMeasurements FROM dimSensorTable ...",
            "source_table": null,
            "source_alias": null
          },
          {
            "source_expression": "s.measurementMonth",
            "cleaned_expression": "s.measurementMonth",
            "target_column": "measurementMonth",
            "transformation_type": "COMPUTED",
            "sql_statement": "SELECT s.measurementMonth, s.measurementLocation, s.numberOfMeasurements FROM ( SELECT t.measurement...",
            "source_table": null,
            "source_alias": "s"
          },
          {
            "source_expression": "s.measurementLocation",
            "cleaned_expression": "s.measurementLocation",
            "target_column": "measurementLocation",
            "transformation_type": "COMPUTED",
            "sql_statement": "SELECT s.measurementMonth, s.measurementLocation, s.numberOfMeasurements FROM ( SELECT t.measurement...",
            "source_table": null,
            "source_alias": "s"
          },
          {
            "source_expression": "s.numberOfMeasurements",
            "cleaned_expression": "s.numberOfMeasurements",
            "target_column": "numberOfMeasurements",
            "transformation_type": "COMPUTED",
            "sql_statement": "SELECT s.measurementMonth, s.measurementLocation, s.numberOfMeasurements FROM ( SELECT t.measurement...",
            "source_table": null,
            "source_alias": "s"
          },
          {
            "source_expression": "t.measurementYear",
            "cleaned_expression": "t.measurementYear",
            "target_column": "measurementYear",
            "transformation_type": "COMPUTED",
            "sql_statement": "SELECT t.measurementYear, COUNT(measurement) numberOfMeasurements FROM dimSensorTable s INNER JOIN f...",
            "source_table": "dimTimeTable",
            "source_alias": "t"
          },
          {
            "source_expression": "COUNT(measurement) numberOfMeasurements",
            "cleaned_expression": "AGGREGATE_WITH_ALIAS",
            "target_column": "COUNT(measurement) numberOfMeasurements",
            "transformation_type": "TRANSFORMED",
            "sql_statement": "SELECT t.measurementYear, COUNT(measurement) numberOfMeasurements FROM dimSensorTable s INNER JOIN f...",
            "source_table": null,
            "source_alias": null
          },
          {
            "source_expression": "t.measurementYear",
            "cleaned_expression": "t.measurementYear",
            "target_column": "measurementYear",
            "transformation_type": "COMPUTED",
            "sql_statement": "SELECT t.measurementYear, l.measurementLocation, ROUND(AVG(measurement), 2) averageValuesOfNitrate F...",
            "source_table": "dimTimeTable",
            "source_alias": "t"
          },
          {
            "source_expression": "l.measurementLocation",
            "cleaned_expression": "l.measurementLocation",
            "target_column": "measurementLocation",
            "transformation_type": "COMPUTED",
            "sql_statement": "SELECT t.measurementYear, l.measurementLocation, ROUND(AVG(measurement), 2) averageValuesOfNitrate F...",
            "source_table": "dimLocationTable",
            "source_alias": "l"
          },
          {
            "source_expression": "ROUND(AVG(measurement)",
            "cleaned_expression": "ROUND(AVG(measurement)",
            "target_column": "ROUND(AVG(measurement)",
            "transformation_type": "DIRECT",
            "sql_statement": "SELECT t.measurementYear, l.measurementLocation, ROUND(AVG(measurement), 2) averageValuesOfNitrate F...",
            "source_table": null,
            "source_alias": null
          },
          {
            "source_expression": "2) averageValuesOfNitrate",
            "cleaned_expression": "2) averageValuesOfNitrate",
            "target_column": "2) averageValuesOfNitrate",
            "transformation_type": "DIRECT",
            "sql_statement": "SELECT t.measurementYear, l.measurementLocation, ROUND(AVG(measurement), 2) averageValuesOfNitrate F...",
            "source_table": null,
            "source_alias": null
          }
        ],
        "total_column_mappings": 15,
        "source_file_path": "C:\\Users\\hibnc\\Documents\\stage3\\MZCODE\\temp\\Water-Quality-DW-on-Oracle-Database-main\\SQL queries and PLSQL codes\\3. Query the data warehouse to get insights and answers to project questions.sql",
        "source_file_type": "sql",
        "technology": "ORACLE",
        "xml_path": "//plsql_operation[@name='anonymous_block']",
        "sql_semantics": [
          {
            "original_query": "SELECT s.measurementMonth, s.sensorType, s.numberOfSensors FROM ( SELECT t.measurementMonth, EXTRACT(MONTH FROM TO_DATE(measurementMonth, 'MM')) monthNumber, s.sensorType, COUNT(measurement) numberOfSensors FROM dimSensorTable s INNER JOIN factMeasurementsTable f ON s.sensorID = f.sensorID INNER JOIN dimTimeTable t ON f.timeID = t.timeID GROUP BY s.sensorType, t.measurementMonth ) s ORDER BY s.monthNumber, s.sensorType",
            "tables": [
              {
                "name": "factMeasurementsTable",
                "alias": "f",
                "schema": null,
                "full_name": "factMeasurementsTable"
              },
              {
                "name": "dimTimeTable",
                "alias": "t",
                "schema": null,
                "full_name": "dimTimeTable"
              }
            ],
            "joins": [
              {
                "join_type": "INNER JOIN",
                "left_table": {
                  "name": "factMeasurementsTable",
                  "alias": "f",
                  "schema": null,
                  "full_name": "factMeasurementsTable"
                },
                "right_table": {
                  "name": "factMeasurementsTable",
                  "alias": "f",
                  "schema": null,
                  "full_name": "factMeasurementsTable"
                },
                "condition": "s.sensorID = f.sensorID",
                "raw_condition": "s.sensorID = f.sensorID"
              },
              {
                "join_type": "INNER JOIN",
                "left_table": {
                  "name": "factMeasurementsTable",
                  "alias": "f",
                  "schema": null,
                  "full_name": "factMeasurementsTable"
                },
                "right_table": {
                  "name": "dimTimeTable",
                  "alias": "t",
                  "schema": null,
                  "full_name": "dimTimeTable"
                },
                "condition": "f.timeID = t.timeID",
                "raw_condition": "f.timeID = t.timeID"
              }
            ],
            "columns": [
              {
                "expression": "s.measurementMonth",
                "alias": null,
                "source_table": null,
                "source_alias": "s",
                "column_name": "measurementMonth",
                "effective_name": "measurementMonth"
              },
              {
                "expression": "s.sensorType",
                "alias": null,
                "source_table": null,
                "source_alias": "s",
                "column_name": "sensorType",
                "effective_name": "sensorType"
              },
              {
                "expression": "s.numberOfSensors",
                "alias": null,
                "source_table": null,
                "source_alias": "s",
                "column_name": "numberOfSensors",
                "effective_name": "numberOfSensors"
              }
            ],
            "inline_views": [],
            "where_clause": null,
            "migration_metadata": {
              "table_count": 2,
              "join_count": 2,
              "column_count": 3,
              "inline_view_count": 0,
              "has_aliases": false,
              "has_joins": true,
              "has_inline_views": false,
              "join_types": [
                "INNER JOIN"
              ]
            }
          },
          {
            "original_query": "SELECT t.measurementWeek, s.sensorType, COUNT(measurement) numberOfMeasurements FROM dimSensorTable s INNER JOIN factMeasurementsTable f ON s.sensorID = f.sensorID INNER JOIN dimTimeTable t ON f.timeID = t.timeID GROUP BY s.sensorType, t.measurementWeek ORDER BY t.measurementWeek, s.sensorType",
            "tables": [
              {
                "name": "dimSensorTable",
                "alias": "s",
                "schema": null,
                "full_name": "dimSensorTable"
              },
              {
                "name": "factMeasurementsTable",
                "alias": "f",
                "schema": null,
                "full_name": "factMeasurementsTable"
              },
              {
                "name": "dimTimeTable",
                "alias": "t",
                "schema": null,
                "full_name": "dimTimeTable"
              }
            ],
            "joins": [
              {
                "join_type": "INNER JOIN",
                "left_table": {
                  "name": "dimSensorTable",
                  "alias": "s",
                  "schema": null,
                  "full_name": "dimSensorTable"
                },
                "right_table": {
                  "name": "factMeasurementsTable",
                  "alias": "f",
                  "schema": null,
                  "full_name": "factMeasurementsTable"
                },
                "condition": "s.sensorID = f.sensorID",
                "raw_condition": "s.sensorID = f.sensorID"
              },
              {
                "join_type": "INNER JOIN",
                "left_table": {
                  "name": "dimSensorTable",
                  "alias": "s",
                  "schema": null,
                  "full_name": "dimSensorTable"
                },
                "right_table": {
                  "name": "dimTimeTable",
                  "alias": "t",
                  "schema": null,
                  "full_name": "dimTimeTable"
                },
                "condition": "f.timeID = t.timeID",
                "raw_condition": "f.timeID = t.timeID"
              }
            ],
            "columns": [
              {
                "expression": "t.measurementWeek",
                "alias": null,
                "source_table": "dimTimeTable",
                "source_alias": "t",
                "column_name": "measurementWeek",
                "effective_name": "measurementWeek"
              },
              {
                "expression": "s.sensorType",
                "alias": null,
                "source_table": "dimSensorTable",
                "source_alias": "s",
                "column_name": "sensorType",
                "effective_name": "sensorType"
              },
              {
                "expression": "COUNT(measurement) numberOfMeasurements",
                "alias": null,
                "source_table": null,
                "source_alias": null,
                "column_name": "COUNT(measurement) numberOfMeasurements",
                "effective_name": "COUNT(measurement) numberOfMeasurements"
              }
            ],
            "inline_views": [],
            "where_clause": null,
            "migration_metadata": {
              "table_count": 3,
              "join_count": 2,
              "column_count": 3,
              "inline_view_count": 0,
              "has_aliases": false,
              "has_joins": true,
              "has_inline_views": false,
              "join_types": [
                "INNER JOIN"
              ]
            }
          },
          {
            "original_query": "SELECT s.measurementMonth, s.measurementLocation, s.numberOfMeasurements FROM ( SELECT t.measurementMonth, l.measurementLocation, EXTRACT(MONTH FROM TO_DATE(measurementMonth, 'MM')) monthNumber, COUNT(measurement) numberOfMeasurements FROM dimLocationTable l INNER JOIN factMeasurementsTable f ON l.locationID = f.locationID INNER JOIN dimTimeTable t ON f.timeID = t.timeID GROUP BY l.measurementLocation, t.measurementMonth ) s ORDER BY s.monthNumber, s.measurementLocation",
            "tables": [
              {
                "name": "factMeasurementsTable",
                "alias": "f",
                "schema": null,
                "full_name": "factMeasurementsTable"
              },
              {
                "name": "dimTimeTable",
                "alias": "t",
                "schema": null,
                "full_name": "dimTimeTable"
              }
            ],
            "joins": [
              {
                "join_type": "INNER JOIN",
                "left_table": {
                  "name": "factMeasurementsTable",
                  "alias": "f",
                  "schema": null,
                  "full_name": "factMeasurementsTable"
                },
                "right_table": {
                  "name": "factMeasurementsTable",
                  "alias": "f",
                  "schema": null,
                  "full_name": "factMeasurementsTable"
                },
                "condition": "l.locationID = f.locationID",
                "raw_condition": "l.locationID = f.locationID"
              },
              {
                "join_type": "INNER JOIN",
                "left_table": {
                  "name": "factMeasurementsTable",
                  "alias": "f",
                  "schema": null,
                  "full_name": "factMeasurementsTable"
                },
                "right_table": {
                  "name": "dimTimeTable",
                  "alias": "t",
                  "schema": null,
                  "full_name": "dimTimeTable"
                },
                "condition": "f.timeID = t.timeID",
                "raw_condition": "f.timeID = t.timeID"
              }
            ],
            "columns": [
              {
                "expression": "s.measurementMonth",
                "alias": null,
                "source_table": null,
                "source_alias": "s",
                "column_name": "measurementMonth",
                "effective_name": "measurementMonth"
              },
              {
                "expression": "s.measurementLocation",
                "alias": null,
                "source_table": null,
                "source_alias": "s",
                "column_name": "measurementLocation",
                "effective_name": "measurementLocation"
              },
              {
                "expression": "s.numberOfMeasurements",
                "alias": null,
                "source_table": null,
                "source_alias": "s",
                "column_name": "numberOfMeasurements",
                "effective_name": "numberOfMeasurements"
              }
            ],
            "inline_views": [],
            "where_clause": null,
            "migration_metadata": {
              "table_count": 2,
              "join_count": 2,
              "column_count": 3,
              "inline_view_count": 0,
              "has_aliases": false,
              "has_joins": true,
              "has_inline_views": false,
              "join_types": [
                "INNER JOIN"
              ]
            }
          },
          {
            "original_query": "SELECT t.measurementYear, COUNT(measurement) numberOfMeasurements FROM dimSensorTable s INNER JOIN factMeasurementsTable f ON s.sensorID = f.sensorID INNER JOIN dimTimeTable t ON f.timeID = t.timeID WHERE s.sensorType = 'pH' GROUP BY t.measurementYear ORDER BY t.measurementYear",
            "tables": [
              {
                "name": "dimSensorTable",
                "alias": "s",
                "schema": null,
                "full_name": "dimSensorTable"
              },
              {
                "name": "factMeasurementsTable",
                "alias": "f",
                "schema": null,
                "full_name": "factMeasurementsTable"
              },
              {
                "name": "dimTimeTable",
                "alias": "t",
                "schema": null,
                "full_name": "dimTimeTable"
              }
            ],
            "joins": [
              {
                "join_type": "INNER JOIN",
                "left_table": {
                  "name": "dimSensorTable",
                  "alias": "s",
                  "schema": null,
                  "full_name": "dimSensorTable"
                },
                "right_table": {
                  "name": "factMeasurementsTable",
                  "alias": "f",
                  "schema": null,
                  "full_name": "factMeasurementsTable"
                },
                "condition": "s.sensorID = f.sensorID",
                "raw_condition": "s.sensorID = f.sensorID"
              },
              {
                "join_type": "INNER JOIN",
                "left_table": {
                  "name": "dimSensorTable",
                  "alias": "s",
                  "schema": null,
                  "full_name": "dimSensorTable"
                },
                "right_table": {
                  "name": "dimTimeTable",
                  "alias": "t",
                  "schema": null,
                  "full_name": "dimTimeTable"
                },
                "condition": "f.timeID = t.timeID",
                "raw_condition": "f.timeID = t.timeID"
              }
            ],
            "columns": [
              {
                "expression": "t.measurementYear",
                "alias": null,
                "source_table": "dimTimeTable",
                "source_alias": "t",
                "column_name": "measurementYear",
                "effective_name": "measurementYear"
              },
              {
                "expression": "COUNT(measurement) numberOfMeasurements",
                "alias": null,
                "source_table": null,
                "source_alias": null,
                "column_name": "COUNT(measurement) numberOfMeasurements",
                "effective_name": "COUNT(measurement) numberOfMeasurements"
              }
            ],
            "inline_views": [],
            "where_clause": "s.sensorType = 'pH'",
            "migration_metadata": {
              "table_count": 3,
              "join_count": 2,
              "column_count": 2,
              "inline_view_count": 0,
              "has_aliases": false,
              "has_joins": true,
              "has_inline_views": false,
              "join_types": [
                "INNER JOIN"
              ]
            }
          },
          {
            "original_query": "SELECT t.measurementYear, l.measurementLocation, ROUND(AVG(measurement), 2) averageValuesOfNitrate FROM dimLocationTable l INNER JOIN factMeasurementsTable f ON l.locationID = f.locationID INNER JOIN dimSensorTable s ON f.sensorID = s.sensorID INNER JOIN dimTimeTable t ON f.timeID = t.timeID WHERE s.sensorType = 'Nitrate-N' GROUP BY l.measurementLocation, t.measurementYear ORDER BY t.measurementYear, l.measurementLocation",
            "tables": [
              {
                "name": "dimLocationTable",
                "alias": "l",
                "schema": null,
                "full_name": "dimLocationTable"
              },
              {
                "name": "factMeasurementsTable",
                "alias": "f",
                "schema": null,
                "full_name": "factMeasurementsTable"
              },
              {
                "name": "dimSensorTable",
                "alias": "s",
                "schema": null,
                "full_name": "dimSensorTable"
              },
              {
                "name": "dimTimeTable",
                "alias": "t",
                "schema": null,
                "full_name": "dimTimeTable"
              }
            ],
            "joins": [
              {
                "join_type": "INNER JOIN",
                "left_table": {
                  "name": "dimLocationTable",
                  "alias": "l",
                  "schema": null,
                  "full_name": "dimLocationTable"
                },
                "right_table": {
                  "name": "factMeasurementsTable",
                  "alias": "f",
                  "schema": null,
                  "full_name": "factMeasurementsTable"
                },
                "condition": "l.locationID = f.locationID",
                "raw_condition": "l.locationID = f.locationID"
              },
              {
                "join_type": "INNER JOIN",
                "left_table": {
                  "name": "dimLocationTable",
                  "alias": "l",
                  "schema": null,
                  "full_name": "dimLocationTable"
                },
                "right_table": {
                  "name": "dimSensorTable",
                  "alias": "s",
                  "schema": null,
                  "full_name": "dimSensorTable"
                },
                "condition": "f.sensorID = s.sensorID",
                "raw_condition": "f.sensorID = s.sensorID"
              },
              {
                "join_type": "INNER JOIN",
                "left_table": {
                  "name": "dimLocationTable",
                  "alias": "l",
                  "schema": null,
                  "full_name": "dimLocationTable"
                },
                "right_table": {
                  "name": "dimTimeTable",
                  "alias": "t",
                  "schema": null,
                  "full_name": "dimTimeTable"
                },
                "condition": "f.timeID = t.timeID",
                "raw_condition": "f.timeID = t.timeID"
              }
            ],
            "columns": [
              {
                "expression": "t.measurementYear",
                "alias": null,
                "source_table": "dimTimeTable",
                "source_alias": "t",
                "column_name": "measurementYear",
                "effective_name": "measurementYear"
              },
              {
                "expression": "l.measurementLocation",
                "alias": null,
                "source_table": "dimLocationTable",
                "source_alias": "l",
                "column_name": "measurementLocation",
                "effective_name": "measurementLocation"
              },
              {
                "expression": "ROUND(AVG(measurement)",
                "alias": null,
                "source_table": null,
                "source_alias": null,
                "column_name": "ROUND(AVG(measurement)",
                "effective_name": "ROUND(AVG(measurement)"
              },
              {
                "expression": "2) averageValuesOfNitrate",
                "alias": null,
                "source_table": null,
                "source_alias": null,
                "column_name": "2) averageValuesOfNitrate",
                "effective_name": "2) averageValuesOfNitrate"
              }
            ],
            "inline_views": [],
            "where_clause": "s.sensorType = 'Nitrate-N'",
            "migration_metadata": {
              "table_count": 4,
              "join_count": 3,
              "column_count": 4,
              "inline_view_count": 0,
              "has_aliases": false,
              "has_joins": true,
              "has_inline_views": false,
              "join_types": [
                "INNER JOIN"
              ]
            }
          }
        ]
      },
      "context": {},
      "id": "plsql::3. Query the data warehouse to get insights and answers to project questions.sql::anonymous_block"
    },
    {
      "node_type": "pipeline",
      "name": "3. Query the data warehouse to get insights and answers to project questions",
      "properties": {
        "file": "C:\\Users\\hibnc\\Documents\\stage3\\MZCODE\\temp\\Water-Quality-DW-on-Oracle-Database-main\\SQL queries and PLSQL codes\\3. Query the data warehouse to get insights and answers to project questions.sql",
        "technology": "ORACLE",
        "fqn": "oracle/3. Query the data warehouse to get insights and answers to project questions",
        "qualified_name": "oracle/3. Query the data warehouse to get insights and answers to project questions",
        "source_file_path": "C:\\Users\\hibnc\\Documents\\stage3\\MZCODE\\temp\\Water-Quality-DW-on-Oracle-Database-main\\SQL queries and PLSQL codes\\3. Query the data warehouse to get insights and answers to project questions.sql",
        "source_file_type": "sql",
        "xml_path": "//plsql_operation[@name='3. Query the data warehouse to get insights and answers to project questions']",
        "execution_priority": 1,
        "upstream_dependencies": [],
        "downstream_dependencies": [],
        "shared_tables_used": [
          "table::dimLocationTable",
          "table::dimSensorTable",
          "table::dimTimeTable",
          "table::factMeasurementsTable"
        ],
        "shared_connections_used": [],
        "cross_package_analysis_complete": true
      },
      "context": {},
      "id": "plsql::3. Query the data warehouse to get insights and answers to project questions.sql"
    },
    {
      "node_type": "operation",
      "name": "ROUND",
      "properties": {
        "technology": "ORACLE"
      },
      "context": {},
      "id": "plsql::ROUND"
    },
    {
      "node_type": "operation",
      "name": "AVG",
      "properties": {
        "technology": "ORACLE"
      },
      "context": {},
      "id": "plsql::AVG"
    }
  ],
  "links": [
    {
      "relation": "reads_from",
      "properties": {},
      "source": "plsql::Setup. PLSQL code to create the staging table.sql::table_creation_task",
      "target": "table::dw_water_quality"
    },
    {
      "relation": "contains",
      "properties": {
        "source_file_path": "C:\\Users\\hibnc\\Documents\\stage3\\MZCODE\\temp\\Water-Quality-DW-on-Oracle-Database-main\\Setup. PLSQL code to create the staging table.sql",
        "derivation_method": "sql_parsing",
        "confidence_level": "high",
        "technology": "ORACLE",
        "xml_location": "//plsql_statement",
        "context_info": {
          "sql_statement": "PL/SQL operation",
          "sql_statement_length": 16,
          "component_type": "PL/SQL Parser",
          "property_name": "relation_detection"
        }
      },
      "source": "plsql::Setup. PLSQL code to create the staging table.sql",
      "target": "plsql::Setup. PLSQL code to create the staging table.sql::table_creation_task"
    },
    {
      "relation": "reads_from",
      "properties": {},
      "source": "plsql::1. Data exploration column analysis using SQL queries and data cleaning.sql::data_analysis_task",
      "target": "table::dw_water_quality"
    },
    {
      "relation": "depends_on",
      "properties": {},
      "source": "plsql::1. Data exploration column analysis using SQL queries and data cleaning.sql::data_analysis_task",
      "target": "plsql::COUNT"
    },
    {
      "relation": "contains",
      "properties": {
        "source_file_path": "C:\\Users\\hibnc\\Documents\\stage3\\MZCODE\\temp\\Water-Quality-DW-on-Oracle-Database-main\\SQL queries and PLSQL codes\\1. Data exploration column analysis using SQL queries and data cleaning.sql",
        "derivation_method": "sql_parsing",
        "confidence_level": "high",
        "technology": "ORACLE",
        "xml_location": "//plsql_statement",
        "context_info": {
          "sql_statement": "PL/SQL operation",
          "sql_statement_length": 16,
          "component_type": "PL/SQL Parser",
          "property_name": "relation_detection"
        }
      },
      "source": "plsql::1. Data exploration column analysis using SQL queries and data cleaning.sql",
      "target": "plsql::1. Data exploration column analysis using SQL queries and data cleaning.sql::data_analysis_task"
    },
    {
      "relation": "reads_from",
      "properties": {},
      "source": "plsql::2. LOAD PHASE !!!!! Create dimension and fact tables and load them with PLSQL Cursors.sql::cursor_processing_c_location",
      "target": "table::dimLocationTable"
    },
    {
      "relation": "reads_from",
      "properties": {},
      "source": "plsql::2. LOAD PHASE !!!!! Create dimension and fact tables and load them with PLSQL Cursors.sql::cursor_processing_c_location",
      "target": "table::dimPurposeTable"
    },
    {
      "relation": "reads_from",
      "properties": {},
      "source": "plsql::2. LOAD PHASE !!!!! Create dimension and fact tables and load them with PLSQL Cursors.sql::cursor_processing_c_location",
      "target": "table::dimComplianceTable"
    },
    {
      "relation": "reads_from",
      "properties": {},
      "source": "plsql::2. LOAD PHASE !!!!! Create dimension and fact tables and load them with PLSQL Cursors.sql::cursor_processing_c_location",
      "target": "table::dimSampleTable"
    },
    {
      "relation": "reads_from",
      "properties": {},
      "source": "plsql::2. LOAD PHASE !!!!! Create dimension and fact tables and load them with PLSQL Cursors.sql::cursor_processing_c_location",
      "target": "table::dimSensorTable"
    },
    {
      "relation": "reads_from",
      "properties": {},
      "source": "plsql::2. LOAD PHASE !!!!! Create dimension and fact tables and load them with PLSQL Cursors.sql::cursor_processing_c_location",
      "target": "table::dimTimeTable"
    },
    {
      "relation": "reads_from",
      "properties": {
        "source_file_path": "C:\\Users\\hibnc\\Documents\\stage3\\MZCODE\\temp\\Water-Quality-DW-on-Oracle-Database-main\\SQL queries and PLSQL codes\\2. LOAD PHASE !!!!! Create dimension and fact tables and load them with PLSQL Cursors.sql",
        "derivation_method": "sql_parsing",
        "confidence_level": "high",
        "technology": "ORACLE",
        "xml_location": "//plsql_statement",
        "context_info": {
          "sql_statement": "PL/SQL operation",
          "sql_statement_length": 16,
          "component_type": "PL/SQL Parser",
          "property_name": "relation_detection"
        }
      },
      "source": "plsql::2. LOAD PHASE !!!!! Create dimension and fact tables and load them with PLSQL Cursors.sql::cursor_processing_c_location",
      "target": "table::factMeasurementsTable"
    },
    {
      "relation": "reads_from",
      "properties": {
        "source_file_path": "C:\\Users\\hibnc\\Documents\\stage3\\MZCODE\\temp\\Water-Quality-DW-on-Oracle-Database-main\\SQL queries and PLSQL codes\\2. LOAD PHASE !!!!! Create dimension and fact tables and load them with PLSQL Cursors.sql",
        "derivation_method": "sql_parsing",
        "confidence_level": "high",
        "technology": "ORACLE",
        "xml_location": "//plsql_statement",
        "context_info": {
          "sql_statement": "PL/SQL operation",
          "sql_statement_length": 16,
          "component_type": "PL/SQL Parser",
          "property_name": "relation_detection"
        }
      },
      "source": "plsql::2. LOAD PHASE !!!!! Create dimension and fact tables and load them with PLSQL Cursors.sql::cursor_processing_c_location",
      "target": "table::dw_water_quality"
    },
    {
      "relation": "contains",
      "properties": {
        "source_file_path": "C:\\Users\\hibnc\\Documents\\stage3\\MZCODE\\temp\\Water-Quality-DW-on-Oracle-Database-main\\SQL queries and PLSQL codes\\2. LOAD PHASE !!!!! Create dimension and fact tables and load them with PLSQL Cursors.sql",
        "derivation_method": "sql_parsing",
        "confidence_level": "high",
        "technology": "ORACLE",
        "xml_location": "//plsql_statement",
        "context_info": {
          "sql_statement": "PL/SQL operation",
          "sql_statement_length": 16,
          "component_type": "PL/SQL Parser",
          "property_name": "relation_detection"
        }
      },
      "source": "plsql::2. LOAD PHASE !!!!! Create dimension and fact tables and load them with PLSQL Cursors.sql",
      "target": "plsql::2. LOAD PHASE !!!!! Create dimension and fact tables and load them with PLSQL Cursors.sql::cursor_processing_c_location"
    },
    {
      "relation": "references",
      "properties": {
        "join_type": "INNER JOIN",
        "condition": "l.locationID = f.locationID",
        "relationship_type": "join_relationship"
      },
      "source": "table::dimLocationTable",
      "target": "table::factMeasurementsTable"
    },
    {
      "relation": "references",
      "properties": {
        "join_type": "INNER JOIN",
        "condition": "f.sensorID = s.sensorID",
        "relationship_type": "join_relationship"
      },
      "source": "table::dimLocationTable",
      "target": "table::dimSensorTable"
    },
    {
      "relation": "references",
      "properties": {
        "join_type": "INNER JOIN",
        "condition": "f.timeID = t.timeID",
        "relationship_type": "join_relationship"
      },
      "source": "table::dimLocationTable",
      "target": "table::dimTimeTable"
    },
    {
      "relation": "references",
      "properties": {
        "join_type": "INNER JOIN",
        "condition": "s.sensorID = f.sensorID",
        "relationship_type": "join_relationship"
      },
      "source": "table::dimSensorTable",
      "target": "table::factMeasurementsTable"
    },
    {
      "relation": "references",
      "properties": {
        "join_type": "INNER JOIN",
        "condition": "f.timeID = t.timeID",
        "relationship_type": "join_relationship"
      },
      "source": "table::dimSensorTable",
      "target": "table::dimTimeTable"
    },
    {
      "relation": "references",
      "properties": {
        "join_type": "INNER JOIN",
        "condition": "l.locationID = f.locationID",
        "relationship_type": "join_relationship"
      },
      "source": "table::factMeasurementsTable",
      "target": "table::factMeasurementsTable"
    },
    {
      "relation": "references",
      "properties": {
        "join_type": "INNER JOIN",
        "condition": "f.timeID = t.timeID",
        "relationship_type": "join_relationship"
      },
      "source": "table::factMeasurementsTable",
      "target": "table::dimTimeTable"
    },
    {
      "relation": "reads_from",
      "properties": {},
      "source": "plsql::3. Query the data warehouse to get insights and answers to project questions.sql::anonymous_block",
      "target": "table::dimLocationTable"
    },
    {
      "relation": "reads_from",
      "properties": {},
      "source": "plsql::3. Query the data warehouse to get insights and answers to project questions.sql::anonymous_block",
      "target": "table::dimSensorTable"
    },
    {
      "relation": "depends_on",
      "properties": {},
      "source": "plsql::3. Query the data warehouse to get insights and answers to project questions.sql::anonymous_block",
      "target": "plsql::COUNT"
    },
    {
      "relation": "depends_on",
      "properties": {},
      "source": "plsql::3. Query the data warehouse to get insights and answers to project questions.sql::anonymous_block",
      "target": "plsql::ROUND"
    },
    {
      "relation": "depends_on",
      "properties": {},
      "source": "plsql::3. Query the data warehouse to get insights and answers to project questions.sql::anonymous_block",
      "target": "plsql::AVG"
    },
    {
      "relation": "reads_from",
      "properties": {},
      "source": "plsql::3. Query the data warehouse to get insights and answers to project questions.sql::anonymous_block",
      "target": "table::factMeasurementsTable"
    },
    {
      "relation": "reads_from",
      "properties": {},
      "source": "plsql::3. Query the data warehouse to get insights and answers to project questions.sql::anonymous_block",
      "target": "table::dimTimeTable"
    },
    {
      "relation": "contains",
      "properties": {
        "source_file_path": "C:\\Users\\hibnc\\Documents\\stage3\\MZCODE\\temp\\Water-Quality-DW-on-Oracle-Database-main\\SQL queries and PLSQL codes\\3. Query the data warehouse to get insights and answers to project questions.sql",
        "derivation_method": "sql_parsing",
        "confidence_level": "high",
        "technology": "ORACLE",
        "xml_location": "//plsql_statement",
        "context_info": {
          "sql_statement": "PL/SQL operation",
          "sql_statement_length": 16,
          "component_type": "PL/SQL Parser",
          "property_name": "relation_detection"
        }
      },
      "source": "plsql::3. Query the data warehouse to get insights and answers to project questions.sql",
      "target": "plsql::3. Query the data warehouse to get insights and answers to project questions.sql::anonymous_block"
    }
  ]
}